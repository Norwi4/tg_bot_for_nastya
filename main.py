import telebot
from telebot import types
import logging
import asyncio
from aiogram.types import ChatActions

bot = telebot.TeleBot('5864236311:AAEwGXU0uyvxuiei2FSDiijtb8b2B9PTZpI')

#love = ['—è —Ç–µ–±—è –ª—é–±–ª—é', '–ª—é–±–ª—é —Ç–µ–±—è', '–ª—é–±–ª—é']

name = ''
surname = ''
age = 0


@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
    btn2 = types.KeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
    markup.add(btn1, btn2)
    bot.send_message(message.chat.id,
                     text="–ü—Ä–∏–≤–µ—Ç, {0.first_name}! –Ø –±—É–¥—É –ø–æ–¥–º–µ–Ω—è—Ç—å –ñ–µ–Ω—é, –ø–æ–∫–∞ –æ–Ω –∑–∞–Ω—è—Ç —Ä–∞–±–æ—Ç–æ–π –∏ –Ω–µ –±—É–¥–µ—Ç –Ω–∞ —Å–≤—è–∑–∏. –ï—Å–ª–∏ —Ç–µ–±–µ —Å—Ç–∞–Ω–µ—Ç —Å–∫—É—á–Ω–æ, —Ç—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –ø–æ–±–æ–ª—Ç–∞—Ç—å —Å–æ –º–Ω–æ–π!".format(
                         message.from_user), reply_markup=markup)


@bot.message_handler(content_types=['text'])
def love(message):
    love = ['—è —Ç–µ–±—è –ª—é–±–ª—é', '–ª—é–±–ª—é —Ç–µ–±—è', '–ª—é–±–ª—é', '—è —Ç–µ–±—è –ª—é–±–ª—é‚ù§Ô∏è', '–ª—é–±–ª—é —Ç–µ–±—è‚ù§Ô∏è', '–ª—é–±–ª—é‚ù§Ô∏è']
    come = ['–∫–æ–≥–¥–∞ —Ç—ã –ø—Ä–∏–µ–¥–µ—à—å?', '—Å–∫–æ—Ä–æ —Ç—ã –ø—Ä–∏–µ–¥–µ—à—å?', '–∫–æ–≥–¥–∞ —Ç–µ–±—è –∂–¥–∞—Ç—å –≤ –≥–æ—Å—Ç–∏?', '–∫–æ–≥–¥–∞ —Ç–µ–±—è –∂–¥–∞—Ç—å?', '—Ç—ã —Å–∫–æ—Ä–æ –ø—Ä–∏–µ–¥–µ—à—å?', '–ø—Ä–∏–µ–∑–∂–∞–π –≤ –≥–æ—Å—Ç–∏', '–ø—Ä–∏–µ–∑–∂–∞–π –∫–æ –º–Ω–µ']
    logging.info(message.text)
    print(message.text)
    string = message.text.lower()
    if string in love:
        bot.send_chat_action(message.chat.id, ChatActions.TYPING)
        bot.send_message(message.from_user.id, "–∏ —è —Ç–µ–±—è –ª—é–±–ª—é, –º–∞–ª—ã—à–∫–∞‚ù§Ô∏è")
        #bot.register_next_step_handler(message, get_name)  # —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ ‚Äì —Ñ—É–Ω–∫—Ü–∏—è get_name

    elif string in come:
        bot.send_chat_action(message.chat.id, ChatActions.TYPING)
        bot.send_message(message.from_user.id, "—è —Å–∫–æ—Ä–æ –ø—Ä–∏–µ–¥—É, –¥–æ—Ä–æ–≥–∞—è \n–Ω–æ –ø–æ–∫–∞ –Ω–µ –∑–Ω–∞—é –∫–æ–≥–¥–∞")
    else:
        bot.send_message(message.from_user.id, '–ù–∞–ø–∏—à–∏ /reg')


@bot.message_handler(content_types=['text'])
def func(message):
    if (message.text == "üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è"):
        bot.send_message(message.chat.id, text="–ü—Ä–∏–≤–µ–µ—Ç.. –°–ø–∞—Å–∏–±–æ —á—Ç–æ —á–∏—Ç–∞–µ—à—å —Å—Ç–∞—Ç—å—é!)")
    elif (message.text == "‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–ö–∞–∫ –º–µ–Ω—è –∑–æ–≤—É—Ç?")
        btn2 = types.KeyboardButton("–ß—Ç–æ —è –º–æ–≥—É?")
        back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(btn1, btn2, back)
        bot.send_message(message.chat.id, text="–ó–∞–¥–∞–π –º–Ω–µ –≤–æ–ø—Ä–æ—Å", reply_markup=markup)

    elif (message.text == "–ö–∞–∫ –º–µ–Ω—è –∑–æ–≤—É—Ç?"):
        bot.send_message(message.chat.id, "–£ –º–µ–Ω—è –Ω–µ—Ç –∏–º–µ–Ω–∏..")
        bot.send_message()

    elif message.text == "–ß—Ç–æ —è –º–æ–≥—É?":
        bot.send_message(message.chat.id, text="–ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è —Å —á–∏—Ç–∞—Ç–µ–ª—è–º–∏")

    elif (message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
        button2 = types.KeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
        markup.add(button1, button2)
        bot.send_message(message.chat.id, text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=markup)
    else:
        bot.send_message(message.chat.id, text="–ù–∞ —Ç–∞–∫—É—é –∫–æ–º–º–∞–Ω–¥—É —è –Ω–µ –∑–∞–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–ª..")

'''@bot.message_handler(content_types=['text'])
def st(message):
    if message.text == '/reg':
        bot.send_message(message.from_user.id, "–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")
        bot.register_next_step_handler(message, get_name)  # —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ ‚Äì —Ñ—É–Ω–∫—Ü–∏—è get_name
    else:
        bot.send_message(message.from_user.id, '–ù–∞–ø–∏—à–∏ /reg')'''





bot.polling(none_stop=True, interval=0)
